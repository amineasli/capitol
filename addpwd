#!/usr/bin/perl 

use strict;
use warnings;
use Getopt::Long;
use Crypt::CBC;

#The location of the database file
my $pwd_db_file = 'pwd-db.dat';
my $username;
my $password;
my $type; 
my $host;
my $description = '';
my $pwd_length;
my $key = 'my secret key';
my $cipher_alg = 'Blowfish';
my $cipher = Crypt::CBC->new( -key    => $key,
                              -cipher => $cipher_alg ); 

GetOptions ( "username|u=s"    => \$username,
	     "password|p=s"    => \$password,
	     "type|t=s"        => \$type,
	     "host|h=s"	       => \$host,
	     "description|d=s" => \$description, 
             "generate|g=i"    => \$pwd_length);

usage() unless ( $username and ($password or $pwd_length) and $type and $host );

add_password();

sub usage {
   die "Usage: $0 -u <username> [ -p <password> | -g <pwd_length> ] -t <type> -h <host> [ -d <description> ] \n";
}

sub password_exists {
   my $found;

   open my $pwd_db_r, '<', $pwd_db_file
      or die "Cannot open password database file $pwd_db_file for reading: $!\n";

   while ( <$pwd_db_r> ) {
      chomp;
      if ( /$username/ and /$type/ and /$host/ ) {
         $found = 1; 
         last;
      }
   }

   close $pwd_db_r
      or die "Error closing $pwd_db_file: $!\n"; 

   return $found ? 1 : 0;
}

sub generate_random_pwd {
   my @random_chars = ( 'a'..'z', 'A'..'Z', 0..9, '$', '&', ' ', '?', '@', '#', '<', '>', '(', ')', '{', '}', '[', ']', '/', '\\' );
   return join '', map $random_chars[rand @random_chars], 0..$_[0];
}

sub add_password {

   die "Password already exists" if password_exists();
   
   $password = generate_random_pwd($pwd_length) if $pwd_length;

   open my $pwd_db_fh, '>>', $pwd_db_file
      or die "Cannot open password database file $pwd_db_file for appending: $!\n";

   #Encrypt password field
   my $cipher_password = $cipher->encrypt($password);
   
   #Create a new record
   my $record = join( ":", $username, $cipher_password, $type, $host, $description );
   
   #Insert the new record
   print $pwd_db_fh "$record\n"
      or die "Error writing to $pwd_db_file: $!\n";

   close $pwd_db_fh
      or die "Error closing $pwd_db_file: $!\n"; 

   print "Password added successfully\n";
}

exit 0;  
